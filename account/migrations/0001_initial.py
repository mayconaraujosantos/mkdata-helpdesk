# Generated by Django 4.2.3 on 2023-07-05 16:02

import django.utils.timezone
from django.db import migrations, models

import account.managers


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="GlobalPermissions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "permissions": (),
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_column="tx_usuario", max_length=64, unique=True
                    ),
                ),
                ("password", models.CharField(db_column="tx_senha", max_length=104)),
                (
                    "name",
                    models.CharField(db_column="tx_nome", max_length=256, null=True),
                ),
                (
                    "email",
                    models.CharField(db_column="tx_email", max_length=256, null=True),
                ),
                (
                    "last_login",
                    models.CharField(db_column="dt_ultimo_login", null=True),
                ),
                ("is_active", models.BooleanField(db_column="cs_ativo", default=True)),
                (
                    "is_superuser",
                    models.BooleanField(
                        db_column="cs_super_usuario", default=False, null=True
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        db_column="cs_suporte", default=False, null=True
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(db_column="cs_padrao", default=False),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "users",
                "verbose_name_plural": "users",
                "db_table": "users",
            },
            managers=[
                ("objects", account.managers.UserManager()),
            ],
        ),
    ]
